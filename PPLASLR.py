import psutil
import urllib.request
import smtplib
import schedule
from sys import *
import time
import os
from email import encoders
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart



def is_connected():
	try:
		urllib.request.urlopen("http://216.58.192.142",timeout=5)
		return True
	except urllib.request.URLError as err:
		return False
def MailSender(filename,time,mail):
	try:
		fromaddr="jeetshah1110@gmail.com"
		toaddr=mail
		msg=MIMEMultipart()
		msg['From']=fromaddr
		msg['To']=toaddr
		body="""
		hello %s
		this is autogenerated mail"""%(time)
		Subject="LOG FROM JEET"
		msg['Subject']=Subject
		msg.attach(MIMEText(body,'plain'))
		attachment=open(filename,'rb')
		p=MIMEBase('application','octet-stream')
		p.set_payload((attachment).read())
		encoders.encode_base64(p)
		p.add_header('Content-Disposition',"attachment;filename=%s"% filename)
		msg.attach(p)
		s=smtplib.SMTP('smtp.gmail.com',587)
		s.starttls()
		s.login(fromaddr,"harley11112222")
		text=msg.as_string()
		s.sendmail(fromaddr,toaddr,text)
		s.quit()
	except Exception as e:
		print(e)
def DisplayProc(mail,log_dir="LOGDIR"):
	proclist=[]
	header="*"*100+"\n"
	if not os.path.exists(log_dir):
		try:
			os.mkdir(log_dir)
		except Exception as e:
			pass
	log_path=os.path.join(log_dir,"LogFile%s.log"%(time.ctime().replace(":",".")))
	
	f=open(log_path,"w")
	f.write(header)
	f.write("Logfile:"+time.ctime()+"\n")
	f.write(header)
	try:
		for proc in psutil.process_iter():
			pinfo=proc.as_dict(attrs=['pid','name','username'])
			proclist.append(pinfo)
	except Exception as e:
		print(e)
		pass
	for item in proclist:
		f.write("%s\n"%(item))
	f.close()
	print("log file generated!")
	if is_connected():
		MailSender(log_path,time.ctime(),mail)
		print("mail sent!")
	else:
		print("unable to connect  to internet!")

def main():
	print("application to send log file to specified mail")
	if(len(argv)!=3):
		print("invalid arguments!")
		exit()
	schedule.every(1).minutes.do(DisplayProc,mail=argv[1],log_dir=argv[2]);

	while True:
		schedule.run_pending()
		time.sleep(1)
	

if __name__=="__main__":
	main()

